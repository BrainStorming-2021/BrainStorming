# 2017 아주대학교 프로그래밍 경시대회 (Large)
# 1등을 하는 참가자의 번호를 한 줄에 출력한다.
"""
- 해결한 문제 점수의 총합이 높은 참가자가 더 높은 순위를 가진다.
- 점수의 총합이 같은 경우, 제출 횟수가 적은 참가자가 더 높은 순위를 가진다.
- 점수의 총합과 제출 횟수가 같은 경우, 마지막으로 점수를 획득한 문제의 업로드
시간이 빠른 참가자가 더 높은 순위를 가진다.

참가자의 점수, 제출 횟수, 마지막으로 점수를 획득한 문제의 업로드 시간.
"""
"""
람다함수 : 익명함수
함수를 사용하는 대신 이름은 정하지 않고 일회성으로 사용한다.
lambda argument : expression
인자는 콤마로 구분할 수 있다. 

# 람다 함수 우선순위
비교할 아이템의 요소가 여러개일 경우에는 튜플로 우선순위를 정해줄 수 있다.
기본적으로 오름차순으로 정렬되고, -를 붙이면 내림차순으로 정렬된다.
"""
cnt = int(input())
participant = [list(map(int, input().split())) for _ in range(cnt)]
sorted_value = sorted(participant, key=lambda x: (-x[0], x[1], x[2]))
# 참가자의 번호를 출력, index함수는 배열에서 값의 위치를 찾아준다.
# 중복된 값이 있으면 가장 최소의 위치를 리턴한다
print(participant.index(sorted_value[0]) + 1)
# 시간 : 68ms
